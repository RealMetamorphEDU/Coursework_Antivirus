import QtQuick 2.12
import QtQuick.Controls 2.5
import QtQuick.Controls.Universal 2.12
import QtQuick.Layouts 1.14

import ScanStatus 1.0

Page {
    property int windowW: 800
    property int windowH: 600
    property int mainPaneW: 750
    id: page
    width: windowW
    height: windowH

    title: qsTr("Page 1")

    ColumnLayout {
        id: columnLayout
        width: mainPaneW
        anchors.left: parent.left
        anchors.leftMargin: 25
        anchors.top: parent.top
        anchors.topMargin: 30

        Label {
            id: windowTitle
            text: qsTr("Сканирование объектов")
            Layout.bottomMargin: 20
            font.kerning: true
            font.preferShaping: true
            font.pointSize: 30
            layer.smooth: true
            renderType: Text.QtRendering
        }

        Label {
            id: stateText
            text: qsTr("Открытие объекта для сканирования")
            font.pointSize: 16
        }

        Button {
            id: chooseButton
            width: 195
            text: qsTr("Открыть...")
            Layout.fillWidth: false
            icon.source: "icons/folder.png"
        }

        Label {
            id: label
            width: 318
            height: 20
            text: qsTr("Можно открыть как файл, так и целую папку")
            wrapMode: Text.WordWrap
        }
    }
    ColumnLayout {
        id: columnLayout2
        width: mainPaneW
        height: 360
        anchors.top: columnLayout.bottom
        anchors.topMargin: 20
        anchors.left: parent.left
        anchors.leftMargin: 25
        spacing: 5

        Row {
            id: row
            width: parent.width
            height: 75
            Layout.fillWidth: true
            spacing: 5

            Image {
                id: image
                width: 50
                height: 50
                fillMode: Image.PreserveAspectFit
                source: "icons/folder.png"
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
            }

            Text {
                id: element
                text: qsTr("Сканирование #1")
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
                font.pixelSize: 14
            }

            ProgressBar {
                visible: false
                id: progressBar
                width: mainPaneW * 0.55
                value: 0.5
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
            }

            Text {
                id: element1
                color:"#ff0000"
                text: qsTr("Количество угроз: 1")
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
                font.pixelSize: 14
            }

            Button {
                id: button
                text: qsTr("Подробнее...")
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
                //icon.source: "icons/pause.png"
            }
        }
        Row {
            id: row2
            width: parent.width
            height: 75
            spacing: 5
            Layout.fillWidth: true

            Image {
                id: image2
                width: 50
                height: 50
                fillMode: Image.PreserveAspectFit
                source: "icons/folder.png"
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
            }

            Text {
                id: element2
                text: qsTr("Сканирование #2")
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
                font.pixelSize: 14
            }

            ProgressBar {
                visible: false
                id: progressBar2
                width: mainPaneW * 0.55
                value: 0.5
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
            }

            Text {
                id: element12
                color:"green"
                text: qsTr("Количество угроз: 0 ")
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
                font.pixelSize: 14
            }

            Button {
                id: button2
                visible: false
                text: qsTr("Пауза")
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
                icon.source: "icons/pause.png"
            }
        }
        Row {
            id: row1
            width: parent.width
            height: 75
            spacing: 5
            Layout.fillWidth: true

            Image {
                id: image1
                width: 50
                height: 50
                fillMode: Image.PreserveAspectFit
                source: "icons/file.png"
            }

            Text {
                id: element11
                text: qsTr("Сканирование #3")
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
                font.pixelSize: 14
            }

            ProgressBar {
                id: progressBar1
                width: mainPaneW * 0.55
                value: 0.5
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
            }

            Text {
                id: element111
                text: qsTr("1 из 2")
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
                font.pixelSize: 14
            }

            Button {
                id: button1
                text: qsTr("Пауза")
                anchors.top: parent.verticalCenter
                anchors.topMargin: -height / 2
                icon.source: "icons/pause.png"
            }
        }

    }
}


//            model: ScanStatusModel {
//                statusList: statuses
//            }

//            delegate: Column {
//                Text {
//                    text: model.scanning.toString()
//                }

//                Text {
//                    text: model.taskIndex.toString()
//                }

//                Text {
//                    text: model.taskCount.toString()
//                }

//                Text {
//                    text: model.lastObject.toString()
//                }

//                Text {
//                    text: model.objLeft.toString()
//                }

//                Text {
//                    text: model.objScanned.toString()
//                }
//            }
