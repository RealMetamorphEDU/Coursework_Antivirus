#ifndef SCATSTATUSMODEL_H
#define SCATSTATUSMODEL_H

#include <QAbstractListModel>


struct ScanStatus{
    bool scanning;
    int taskIndex;
    int taskCount;
    QString lastObject;
    int objLeft;
    int objScanned;
};

class ScatStatusModel : public QAbstractListModel
{
    Q_OBJECT
    Q_PROPERTY(QVector<ScanStatus> status MEMBER vector NOTIFY dataChanged)

    enum {
        ScanningRole = Qt::UserRole + 1,
        TaskIndexRole,
        TaskCountRole,
        LastObjectRole,
        ObjLeftRole,
        ObjScannedRole,
    };

public:
    explicit ScatStatusModel(QObject *parent = nullptr);

    // Basic functionality:
    int rowCount(const QModelIndex &parent = QModelIndex()) const override;
    QVariant data(const QModelIndex &index, int role = Qt::DisplayRole) const override;
    virtual QHash<int, QByteArray> roleNames() const override;
    
    // Custom functions
    bool append(ScanStatus);

private:
    QVector<ScanStatus> vector;
};

#endif // SCATSTATUSMODEL_H
